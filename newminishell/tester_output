üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•
                                                                                             
 ‚ñà‚ñà    ‚ñà‚ñà ‚ñà ‚ñà‚ñà    ‚ñà ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà   ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà     ‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà  
 ‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà ‚ñà ‚ñà‚ñà‚ñà   ‚ñà ‚ñà ‚ñà     ‚ñà   ‚ñà ‚ñà     ‚ñà     ‚ñà         ‚ñà‚ñà   ‚ñà     ‚ñà       ‚ñà‚ñà   ‚ñà     ‚ñà   ‚ñà‚ñà 
 ‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñà  ‚ñà ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà  ‚ñà     ‚ñà         ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà  
 ‚ñà  ‚ñà‚ñà  ‚ñà ‚ñà ‚ñà  ‚ñà‚ñà ‚ñà ‚ñà     ‚ñà ‚ñà   ‚ñà ‚ñà     ‚ñà     ‚ñà         ‚ñà‚ñà   ‚ñà         ‚ñà   ‚ñà‚ñà   ‚ñà     ‚ñà   ‚ñà‚ñà 
 ‚ñà      ‚ñà ‚ñà ‚ñà   ‚ñà‚ñà‚ñà ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà   ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà   ‚ñà‚ñà 
                                                                                             
üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•
                                                                                              
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî builtins
Test   1: ‚ùå echo hello world 
mini exit code = $?
bash exit code = 0
Test   2: ‚ùå echo "hello world" 
mini exit code = $?
bash exit code = 0
Test   3: ‚ùå echo 'hello world' 
mini exit code = $?
bash exit code = 0
Test   4: ‚ùå echo hello'world' 
mini exit code = $?
bash exit code = 0
Test   5: ‚ùå echo hello""world 
mini exit code = $?
bash exit code = 0
Test   6: ‚ùå echo '' 
mini exit code = $?
bash exit code = 0
Test   7: ‚ùå echo "$PWD" 
mini output = ($PWD)
bash output = (/home/dvavryn/Documents/minishell/newminishell/minishell_tester)
mini exit code = $?
bash exit code = 0
Test   8: ‚ùå echo '$PWD' 
mini exit code = $?
bash exit code = 0
Test   9: ‚ùå echo "aspas ->'" 
mini exit code = $?
bash exit code = 0
Test  10: ‚ùå echo "aspas -> ' " 
mini exit code = $?
bash exit code = 0
Test  11: ‚ùå echo 'aspas ->"' 
mini exit code = $?
bash exit code = 0
Test  12: ‚ùå echo 'aspas -> " ' 
mini exit code = $?
bash exit code = 0
Test  13: ‚ùå echo "> >> < * ? [ ] | ; [ ] || && ( ) & # $  <<" 
mini exit code = $?
bash exit code = 0
Test  14: ‚ùå echo '> >> < * ? [ ] | ; [ ] || && ( ) & # $  <<' 
mini exit code = $?
bash exit code = 0
Test  15: ‚ùå echo "exit_code ->$? user ->$USER home -> $HOME" 
mini output = (exit_code ->$? user ->$USER home -> $HOME)
bash output = (exit_code ->0 user ->dvavryn home -> /home/dvavryn)
mini exit code = $?
bash exit code = 0
Test  16: ‚ùå echo 'exit_code ->$? user ->$USER home -> $HOME' 
mini exit code = $?
bash exit code = 0
Test  17: ‚ùå echo "$" 
mini exit code = $?
bash exit code = 0
Test  18: ‚ùå echo '$' 
mini exit code = $?
bash exit code = 0
Test  19: ‚ùå echo $ 
mini exit code = $?
bash exit code = 0
Test  20: ‚ùå echo $? 
mini output = ($?)
bash output = (0)
mini exit code = $?
bash exit code = 0
Test  21: ‚ùå echo $?HELLO 
mini output = ($?HELLO)
bash output = (0HELLO)
mini exit code = $?
bash exit code = 0
Test  22: ‚ùå pwd 
mini exit code = $?
bash exit code = 0
Test  23: ‚ùå pwd oi 
mini exit code = $?
bash exit code = 0
mini error = ( ignoring non-option arguments)
bash error = ()
Test  24: ‚ùå export hello 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  25: ‚ùå export HELLO=123 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  26: ‚ùå export A- 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( not a valid identifier)
Test  27: ‚ùå export HELLO=123 A 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  28: ‚ùå export HELLO="123 A-" 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  29: ‚ùå export hello world 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  30: ‚ùå export HELLO-=123 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( not a valid identifier)
Test  31: ‚ùå export = 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( not a valid identifier)
Test  32: ‚ùå export 123 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( not a valid identifier)
Test  33: ‚ùå unset 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  34: ‚ùå unset HELLO 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  35: ‚ùå unset HELLO1 HELLO2 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  36: ‚ùå unset HOME 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  37: ‚ùå unset PATH 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  38: ‚ùå unset SHELL 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  39: ‚ùå cd $PWD 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  40: ‚ùå cd $PWD hi 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( too many arguments)
Test  41: ‚ùå cd 123123 
mini exit code = $?
bash exit code = 1
Test  42: ‚ùå exit 123 
mini exit code = $?
bash exit code = 123
mini error = ( No such file or directory)
bash error = ()
Test  43: ‚ùå exit 298 
mini exit code = $?
bash exit code = 42
mini error = ( No such file or directory)
bash error = ()
Test  44: ‚ùå exit +100 
mini exit code = $?
bash exit code = 100
mini error = ( No such file or directory)
bash error = ()
Test  45: ‚ùå exit "+100" 
mini exit code = $?
bash exit code = 100
mini error = ( No such file or directory)
bash error = ()
Test  46: ‚ùå exit +"100" 
mini exit code = $?
bash exit code = 100
mini error = ( No such file or directory)
bash error = ()
Test  47: ‚ùå exit -100 
mini exit code = $?
bash exit code = 156
mini error = ( No such file or directory)
bash error = ()
Test  48: ‚ùå exit "-100" 
mini exit code = $?
bash exit code = 156
mini error = ( No such file or directory)
bash error = ()
Test  49: ‚ùå exit -"100" 
mini exit code = $?
bash exit code = 156
mini error = ( No such file or directory)
bash error = ()
Test  50: ‚ùå exit hello 
mini exit code = $?
bash exit code = 2
mini error = ( No such file or directory)
bash error = ( numeric argument required)
Test  51: ‚ùå exit 42 world 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( too many arguments)
Test  52: ‚ùå  
mini exit code = $?
bash exit code = 0
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî pipes
Test  53: ‚ùå env | sort | grep -v SHLVL | grep -v ^_ 
mini exit code = $?
bash exit code = 0
Test  54: ‚ùå cat ./test_files/infile_big | grep oi 
mini exit code = $?
bash exit code = 0
Test  55: ‚ùå cat minishell.h | grep ");"$ 
mini exit code = $?
bash exit code = 1
Test  56: ‚ùå export GHOST=123 | env | grep GHOST 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ()
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî redirects
Test  57: ‚ùå grep hi <./test_files/infile 
mini exit code = $?
bash exit code = 0
Test  58: ‚ùå grep hi "<infile" <         ./test_files/infile 
mini exit code = $?
bash exit code = 2
Test  59: ‚ùå echo hi < ./test_files/infile bye bye 
mini exit code = $?
bash exit code = 0
Test  60: ‚ùå grep hi <./test_files/infile_big <./test_files/infile 
mini exit code = $?
bash exit code = 0
Test  61: ‚ùå echo <"./test_files/infile" "bonjour       42" 
mini output = ()
bash output = (bonjour 42)
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  62: ‚ùå cat <"./test_files/file name with spaces" 
mini output = ()
bash output = (üòà üòà üòà This will break your minishell üòà üòà üòà)
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  63: ‚ùå cat <./test_files/infile_big ./test_files/infile 
mini exit code = $?
bash exit code = 0
Test  64: ‚ùå cat <"1""2""3""4""5" 
mini exit code = $?
bash exit code = 1
Test  65: ‚ùå echo <"./test_files/infile" <missing <"./test_files/infile" 
mini exit code = $?
bash exit code = 1
Test  66: ‚ùå echo <missing <"./test_files/infile" <missing 
mini exit code = $?
bash exit code = 1
Test  67: ‚ùå cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  68: ‚ùå echo <"./test_files/infile_big" | cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  69: ‚ùå echo <"./test_files/infile_big" | cat "./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  70: ‚ùå echo <"./test_files/infile_big" | echo <"./test_files/infile" 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  71: ‚ùå echo hi | cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  72: ‚ùå echo hi | cat "./test_files/infile" 
mini exit code = $?
bash exit code = 0
Test  73: ‚ùå cat <"./test_files/infile" | echo hi 
mini output = ()
bash output = (hi)
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ( Broken pipe)
Test  74: ‚ùå cat <"./test_files/infile" | grep hello 
mini output = ()
bash output = (hello)
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  75: ‚ùå cat <"./test_files/infile_big" | echo hi 
mini output = ()
bash output = (hi)
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ( Broken pipe)
Test  76: ‚ùå cat <missing 
mini exit code = $?
bash exit code = 1
Test  77: ‚ùå cat <missing | cat 
mini exit code = $?
bash exit code = 0
Test  78: ‚ùå cat <missing | echo oi 
mini output = ()
bash output = (oi)
mini exit code = $?
bash exit code = 0
Test  79: ‚ùå cat <missing | cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code = $?
bash exit code = 0
Test  80: ‚ùå echo <123 <456 hi | echo 42 
mini output = ()
bash output = (42)
mini exit code = $?
bash exit code = 0
Test  81: ‚ùå ls >./outfiles/outfile01 
mini exit code = $?
bash exit code = 0
Test  82: ‚ùå ls >         ./outfiles/outfile01 
mini exit code = $?
bash exit code = 0
Test  83: ‚ùå echo hi >         ./outfiles/outfile01 bye 
mini exit code = $?
bash exit code = 0
Test  84: ‚ùå ls >./outfiles/outfile01 >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
mini exit code = $?
bash exit code = 0
Test  85: ‚ùå ls >./outfiles/outfile01 >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
mini exit code = $?
bash exit code = 1
Test  86: ‚ùå ls >"./outfiles/outfile with spaces" 
Only in ./bash_outfiles: outfile with spaces
mini outfiles:
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  87: ‚ùå ls >"./outfiles/outfile""1""2""3""4""5" 
Only in ./bash_outfiles: outfile12345
mini outfiles:
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  88: ‚ùå ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02" 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( Permission denied)
Test  89: ‚ùå ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission 
mini exit code = $?
bash exit code = 1
Test  90: ‚ùå cat <"./test_files/infile" >"./outfiles/outfile01" 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
hi
hello
world
42
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test  91: ‚ùå echo hi >./outfiles/outfile01 | echo bye 
mini exit code = $?
bash exit code = 0
Test  92: ‚ùå echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
hi
mini exit code = $?
bash exit code = 0
Test  93: ‚ùå echo hi | echo >./outfiles/outfile01 bye 
mini exit code = $?
bash exit code = 0
Test  94: ‚ùå echo hi | echo bye >./outfiles/outfile01 >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
bye
mini exit code = $?
bash exit code = 0
Test  95: ‚ùå echo hi >./outfiles/outfile01 | echo bye >./outfiles/outfile02 
mini exit code = $?
bash exit code = 0
Test  96: ‚ùå echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
mini output = ()
bash output = (bye)
mini exit code = $?
bash exit code = 0
Test  97: ‚ùå echo hi >./test_files/invalid_permission | echo bye 
mini output = ()
bash output = (bye)
mini exit code = $?
bash exit code = 0
Test  98: ‚ùå echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
mini exit code = $?
bash exit code = 0
mini error = ()
bash error = ( Permission denied)
Test  99: ‚ùå echo hi | echo bye >./test_files/invalid_permission 
mini exit code = $?
bash exit code = 1
Test 100: ‚ùå echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
mini exit code = $?
bash exit code = 1
Test 101: ‚ùå echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01 
Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
mini exit code = $?
bash exit code = 1
mini error = ()
bash error = ( Permission denied)
Test 102: ‚ùå cat <"./test_files/infile" >./test_files/invalid_permission 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( Permission denied)
Test 103: ‚ùå cat >./test_files/invalid_permission <"./test_files/infile" 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( Permission denied)
Test 104: ‚ùå cat <missing >./outfiles/outfile01 
mini exit code = $?
bash exit code = 1
Test 105: ‚ùå cat >./outfiles/outfile01 <missing 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
mini exit code = $?
bash exit code = 1
Test 106: ‚ùå cat <missing >./test_files/invalid_permission 
mini exit code = $?
bash exit code = 1
Test 107: ‚ùå cat >./test_files/invalid_permission <missing 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( Permission denied)
Test 108: ‚ùå cat >./outfiles/outfile01 <missing >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
mini exit code = $?
bash exit code = 1
Test 109: ‚ùå ls >>./outfiles/outfile01 
mini exit code = $?
bash exit code = 0
Test 110: ‚ùå ls >>      ./outfiles/outfile01 
mini exit code = $?
bash exit code = 0
Test 111: ‚ùå ls >>./outfiles/outfile01 >./outfiles/outfile01 
mini exit code = $?
bash exit code = 0
Test 112: ‚ùå ls >./outfiles/outfile01 >>./outfiles/outfile01 
mini exit code = $?
bash exit code = 0
Test 113: ‚ùå ls >./outfiles/outfile01 >>./outfiles/outfile01 >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
mini exit code = $?
bash exit code = 0
Test 114: ‚ùå ls >>./outfiles/outfile01 >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
mini exit code = $?
bash exit code = 0
Test 115: ‚ùå ls >>./test_files/invalid_permission 
mini exit code = $?
bash exit code = 1
Test 116: ‚ùå ls >>./test_files/invalid_permission >>./outfiles/outfile01 
Only in ./mini_outfiles: outfile01
mini outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
bash outfiles:
mini exit code = $?
bash exit code = 1
mini error = ()
bash error = ( Permission denied)
Test 117: ‚ùå ls >>./outfiles/outfile01 >>./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
mini exit code = $?
bash exit code = 1
Test 118: ‚ùå ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./mini_outfiles: outfile02
mini outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
bash outfiles:
mini exit code = $?
bash exit code = 1
mini error = ()
bash error = ( Permission denied)
Test 119: ‚ùå ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02 
mini exit code = $?
bash exit code = 1
Test 120: ‚ùå ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing 
mini exit code = $?
bash exit code = 1
mini error = ( No such file or directory)
bash error = ( Permission denied)
Test 121: ‚ùå echo hi >>./outfiles/outfile01 | echo bye 
mini exit code = $?
bash exit code = 0
Test 122: ‚ùå echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
hi
mini exit code = $?
bash exit code = 0
Test 123: ‚ùå echo hi | echo >>./outfiles/outfile01 bye 
mini exit code = $?
bash exit code = 0
Test 124: ‚ùå echo hi | echo bye >>./outfiles/outfile01 >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
bye
mini exit code = $?
bash exit code = 0
Test 125: ‚ùå echo hi >>./outfiles/outfile01 | echo bye >>./outfiles/outfile02 
mini exit code = $?
bash exit code = 0
Test 126: ‚ùå echo hi >>./test_files/invalid_permission | echo bye 
mini output = ()
bash output = (bye)
mini exit code = $?
bash exit code = 0
Test 127: ‚ùå echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
mini exit code = $?
bash exit code = 0
mini error = ()
bash error = ( Permission denied)
Test 128: ‚ùå echo hi | echo bye >>./test_files/invalid_permission 
mini exit code = $?
bash exit code = 1
Test 129: ‚ùå echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
mini exit code = $?
bash exit code = 1
Test 130: ‚ùå cat <minishell.h>./outfiles/outfile 
mini exit code = $?
bash exit code = 1
Test 131: ‚ùå cat <minishell.h|ls 
mini output = ()
bash output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax tester test_files wildcards)
mini exit code = $?
bash exit code = 0
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî extras
Test 132: ‚ùå  
mini exit code = $?
bash exit code = 0
Test 133: ‚ùå $PWD 
mini exit code = $?
bash exit code = 126
mini error = ( No such file or directory)
bash error = ( Is a directory)
Test 134: ‚ùå $EMPTY 
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test 135: ‚ùå $EMPTY echo hi 
mini output = ()
bash output = (hi)
mini exit code = $?
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()
Test 136: ‚ùå ./test_files/invalid_permission 
mini exit code = $?
bash exit code = 126
Test 137: ‚ùå ./missing.out 
mini exit code = $?
bash exit code = 127
Test 138: ‚ùå missing.out 
mini exit code = $?
bash exit code = 127
mini error = ( No such file or directory)
bash error = ( command not found)
Test 139: ‚ùå "aaa" 
mini exit code = $?
bash exit code = 127
mini error = ( No such file or directory)
bash error = ( command not found)
Test 140: ‚ùå test_files 
mini exit code = $?
bash exit code = 127
mini error = ()
bash error = ( command not found)
Test 141: ‚ùå ./test_files 
mini exit code = $?
bash exit code = 126
mini error = ()
bash error = ( Is a directory)
Test 142: ‚ùå /test_files 
mini exit code = $?
bash exit code = 127
Test 143: ‚ùå minishell.h 
mini exit code = $?
bash exit code = 127
mini error = ( No such file or directory)
bash error = ( command not found)
Test 144: ‚ùå $ 
mini exit code = $?
bash exit code = 127
Test 145: ‚ùå $? 
mini exit code = $?
bash exit code = 127
Test 146: ‚ùå README.md 
mini exit code = $?
bash exit code = 127
mini error = ( Permission denied)
bash error = ( command not found)
/146
üò≠ üò≠ üò≠
